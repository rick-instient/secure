{"version":3,"file":"379.js","mappings":"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","sources":["./apps/heatfleet/secure/src/app/shared/components/order-invoice/order-invoice.component.ts","./apps/heatfleet/secure/src/app/shared/components/order-invoice/order-invoice.component.html","./apps/heatfleet/secure/src/app/shared/models/enums.ts","./apps/heatfleet/secure/src/app/shared/pipes/pipes.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { NumberShort } from '../../pipes/pipes';\r\n\r\n@Component({\r\n  selector: 'app-order-invoice',\r\n  standalone: true,\r\n  imports: [CommonModule, NumberShort],\r\n  templateUrl: './order-invoice.component.html',\r\n  styleUrl: './order-invoice.component.scss'\r\n})\r\nexport class OrderInvoiceComponent {\r\n  @Input() oilOrder: any;\r\n  @Input() serviceOrder: any;\r\n  @Input() data: any;\r\n}\r\n","<div class=\"invioce hf-body-3 hf-dark-grey-text-color\" *ngIf=\"oilOrder && data\">\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td class=\"width-60\">Heating Oil <span class=\"inline-block\">({{data['amount']}} gal,\r\n            ${{(data['oilOrderParameters']['originalGalPrice']\r\n            - (data['oilOrderParameters']['isFlashSaleDiscount'] ?\r\n            data['oilOrderParameters']['flashSaleDiscount'] : 0.00)\r\n            - (data['oilOrderParameters']['isHeatFleetDiscount'] ?\r\n            oilOrder['heatFleetFlashSaleDiscount'] : 0.00)\r\n            + (oilOrder['isFuelAdditive'] ?\r\n            oilOrder['fuelAdditivePricePerGallon'] : 0.00)\r\n            - (oilOrder['payWithCash'] ?\r\n            data['oilOrderParameters']['cashDiscount']: 0.00)).toFixed(3)}}/gal)</span></td>\r\n        <td></td>\r\n        <td class=\"width-20\">${{oilOrder['orderPreTaxSales'].toFixed(2)}}</td>\r\n      </tr>\r\n      <tr>\r\n        <td class=\"width-60\">Sales Tax <span\r\n            class=\"inline-block\">({{(oilOrder['applicableSalesTaxRate']).toFixed(3)}}%<span\r\n              *ngIf=\"oilOrder['applicableSalesTaxRate'] !== 0\">, {{oilOrder['taxCode']}}</span>)</span></td>\r\n        <td></td>\r\n        <td class=\"width-20\">${{oilOrder['salesTax'].toFixed(2)}}</td>\r\n      </tr>\r\n      <tr *ngIf=\"oilOrder['applicablePetroleumBusinessTax'] !== 0\">\r\n        <td class=\"width-60\">Petroleum Business Tax</td>\r\n        <td class=\"width-20\">{{(oilOrder['applicablePetroleumBusinessTax']).toFixed(3)}}%</td>\r\n        <td class=\"width-20\">${{(oilOrder['petroleumBusinessTax']).toFixed(2)}}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <div class=\"break-line\"></div>\r\n  <div class=\"grand-total\">\r\n    <p class=\"hf-dark-font\" *ngIf=\"!oilOrder.payWithCash\">Total</p>\r\n    <p class=\"hf-dark-font\" *ngIf=\"oilOrder.payWithCash\">Total (Cash/Check)</p>\r\n    <span class=\"hf-dark-font\">${{oilOrder['orderTotal'] | numberShort}}</span>\r\n  </div>\r\n</div>","export enum OrderStatus {\r\n  Unknown = 0,\r\n  Temporary = 1,\r\n  Pending = 2,\r\n  Scheduled = 3,\r\n  Delivered = 4,\r\n  Canceled = 5,\r\n  DeliveryFailed = 6,\r\n  PaymentFailed = 7,\r\n  Giveup = 8,\r\n}\r\n\r\nexport enum PriceStatus {\r\n  Active = 0,\r\n  Call = 1,\r\n  Licensed = 2,\r\n  Estimated = 3\r\n}\r\n\r\nexport enum CustomerTaxType {\r\n  Residential = 1,\r\n  Commercial = 2,\r\n}\r\n\r\nexport enum ServiceType {\r\n  Unknown = 0,\r\n  TuneUp = 1,\r\n  ServiceCall = 2,\r\n  OneYearContract = 3,\r\n  OilDelivery = 4,\r\n  All = 5\r\n}\r\n\r\nexport enum PaymentMode {\r\n  CREDIT = 0,\r\n  CASH = 1,\r\n  PAYPAL = 2\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nfunction toFixedWithoutRounding(number: number, decimalPlaces: number): number | string {\r\n  const multiplier = Math.pow(10, decimalPlaces);\r\n  let ans = ('' + (Math.floor(number * multiplier) / multiplier))\r\n  return ans.split('.').length === 1 ? ans + \".0\" : ans;\r\n}\r\n\r\n@Pipe({\r\n  name: 'numberShort',\r\n  standalone: true\r\n})\r\nexport class NumberShort implements PipeTransform {\r\n  transform(num: number | string): string | number {\r\n    if (num === undefined || num === null) {\r\n      return \"\"\r\n    }\r\n    if (typeof (num) == \"string\") {\r\n      num = parseFloat(num.replace(/,/g, ''));\r\n    }\r\n    if (num >= 1000000000) {\r\n      // return (num/1000000000).toFixed(2) + 'B';\r\n      return toFixedWithoutRounding(num / 1000000000, 1) + 'B';\r\n    } else if (num >= 1000000 && num < 1000000000) {\r\n      // return (num/1000000).toFixed(1) + 'M';\r\n      return toFixedWithoutRounding(num / 1000000, 1) + 'M';\r\n    }\r\n    // else if (num >= 1000 && num < 1000000) {\r\n    //   // return (num/1000).toFixed(2) + 'K';\r\n    //   return toFixedWithoutRounding(num/1000, 2) + 'K';\r\n    // } \r\n    else {\r\n      return num.toLocaleString(\"en-US\", { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n    }\r\n  }\r\n}"],"names":["CommonModule","NumberShort","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","oilOrder","toFixed","ɵɵelement","ɵɵtemplate","OrderInvoiceComponent_div_0_span_16_Template","OrderInvoiceComponent_div_0_tr_21_Template","OrderInvoiceComponent_div_0_p_24_Template","OrderInvoiceComponent_div_0_p_25_Template","ɵɵtextInterpolate2","data","ɵɵproperty","payWithCash","ɵɵpipeBind1","OrderInvoiceComponent","_","_2","selectors","inputs","serviceOrder","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","OrderInvoiceComponent_Template","rf","ctx","OrderInvoiceComponent_div_0_Template","i1","NgIf","styles","OrderStatus","PriceStatus","CustomerTaxType","ServiceType","PaymentMode","toFixedWithoutRounding","number","decimalPlaces","multiplier","Math","pow","ans","floor","split","length","transform","num","undefined","parseFloat","replace","toLocaleString","minimumFractionDigits","maximumFractionDigits","pure"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}